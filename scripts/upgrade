#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

path_url=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)
final_path=$(ynh_app_setting_get "$app" final_path)
db_name=$(ynh_app_setting_get "$app" db_name)
domain=$(ynh_app_setting_get "$app" domain)

#=================================================
# Get previous version number
#=================================================

(
	set +eu
	source "${final_path}/venv/bin/activate"
	"${final_path}/venv/bin/pip" install --upgrade pip
	"${final_path}/venv/bin/pip" freeze --local > freeze.pip
)
previous_version=$(cat freeze.pip | grep "Weblate==" | sed "s|Weblate==||")

previous_version_file="../conf/settings_history/settings.$previous_version.py"
test -e "$previous_version_file" || ynh_die "Previous version unknown: $previous_version"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set "$app" is_public 1	# Fix is_public as a boolean value
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set "$app" is_public 0
	is_public=0
fi

if [ -z "$db_name" ]; then	# If db_name doesn't exist, create it
	db_name=$(ynh_sanitize_dbid "$app")
	ynh_app_setting_set "$app" db_name "$db_name"
fi

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path "$path_url")

#=================================================
# STANDARD UPGRADE STEPS
#=================================================

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

if [ "$path_url" == "/" ]
then
	# $finalnginxconf comes from ynh_add_nginx_config
	# uwsgi_param is only needed for non-root installation
	ynh_replace_string "uwsgi_param "     "#uwsgi_param "      "$finalnginxconf"
	ynh_replace_string "uwsgi_modifier1 " "#uwsgi_modifier1 " "$finalnginxconf"
	ynh_replace_string "location //"      "location /"        "$finalnginxconf"

	# ynh panel is only comptable with non-root installation
	ynh_replace_string "	include conf.d/"  "	#include conf.d/"  "$finalnginxconf"

	ynh_store_file_checksum "$finalnginxconf"
fi

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create "$app" "/home/$app"
chsh --shell /bin/bash "$app"

#=================================================
# SPECIFIC UPGRADE
#=================================================

#=================================================
# PIP INSTALLATION
#=================================================

old_settings="./settings.$previous_version.old.py"
settings_diff="./settings.diff"
settings="$final_path/venv/lib/python2.7/site-packages/weblate/settings.py"

db_pwd=$(ynh_app_setting_get "$app" psqlpwd)
admin=$(ynh_app_setting_get "$app" admin)
admin_mail=$(ynh_user_get_info "$admin" mail)
key=$(ynh_string_random)
memc_port=$(ynh_app_setting_get "$app" memc_port)
github_account=$(ynh_app_setting_get "$app" github_account)

#save memc_port if it doesn't exist
if [[ -z "$memc_port" ]]
then
	memc_port=$(cat "$settings" \
		| grep "'LOCATION': '127.0.0.1:" \
		| sed "s|.*:\\(.*\\)'.*|\\1|")
	ynh_app_setting_set "$app" memc_port "$memc_port"
fi

(
	set +eu
	source "${final_path}/venv/bin/activate"
	"${final_path}/venv/bin/pip" install Weblate=="$current_version"
	"${final_path}/venv/bin/pip" install pytz python-bidi PyYaML Babel pyuca pylibravatar pydns psycopg2 python-memcached
	# specific to YunoHost package:
	"${final_path}/venv/bin/pip" install django_sendmail_backend
)

# generate previous defaults settings
cp "$previous_version_file" "$old_settings"
weblate_fill_settings "$old_settings"

# store diff between defaults and local settings
diff --unified "$old_settings" "$settings" > "$settings_diff"

# generate new defaults settings
cp ../conf/settings.py "$settings"
weblate_fill_settings "$settings"

# send diff to the server administrator
mail_subject="'$app' settings diff from $previous_version to $current_version"
mail_message="
Weblate was updated from version $previous_version to $current_version

A new settings.py has been created in:
$settings

You may have changed your defaults settings.
To help you to apply it again, here is a diff file with every changes you did.

Please note secret key is updated, this is normal.

For any issue, please file a bug in: https://github.com/YunoHost-Apps/weblate_ynh
"

echo "$mail_message" | mail -s "$mail_subject" root -u root -a "$settings_diff"

# inform weblate's admin
mail_subject="'$app' was updated from $previous_version to $current_version"
mail_message="
Weblate was updated from version $previous_version to $current_version

A new settings.py has been created and a diff has been sent to root user.
Your administrator may have to update your settings.py to have a fully working installation.
"

echo "$mail_subject" | mail -s "$mail_subject" "$admin_mail"

#=================================================
# Run migration scripts
#=================================================

(
	set +eu
	source ${final_path}/venv/bin/activate
	export DJANGO_SETTINGS_MODULE="weblate.settings"
	cd "${final_path}"
	weblate migrate --noinput
	weblate collectstatic --noinput
	weblate setuplang
	weblate setupgroups
)

# Recalculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/venv/lib/python2.7/site-packages/weblate/settings.py"

#=================================================
# SETUP LOGROTATE
#=================================================

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate

#=================================================
# GENERIC FINALIZATION
#=================================================

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 0 ]
then	# Remove the public access
	ynh_app_setting_delete "$app" skipped_uris
fi
# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway
	ynh_app_setting_set "$app" unprotected_uris "/"

	# ynh panel is not needed
	ynh_replace_string "	include conf.d/"  "	#include conf.d/"  "$finalnginxconf"

	ynh_store_file_checksum "$finalnginxconf"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
