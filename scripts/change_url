#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
set -eu
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME
final_path=/var/www/$app

is_public=$(ynh_app_setting_get "$app" is_public)

#=================================================
# CHECK THE SYNTAX OF THE PATHS
#=================================================

test -n "$old_path" || old_path="/"
test -n "$new_path" || new_path="/"
new_path=$(ynh_normalize_url_path $new_path)
old_path=$(ynh_normalize_url_path $old_path)

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
	change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
	change_path=1
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
# ynh_backup_before_upgrade
# ynh_clean_setup () {
# 	# restore it if the upgrade fails
# 	ynh_restore_upgradebackup
# }
# # Exit if an error occurs during the execution of the script
# ynh_abort_if_errors

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# MODIFY URL IN NGINX CONF
#=================================================

nginx_conf_path="/etc/nginx/conf.d/$old_domain.d/$app.conf"
finalnginxconf=$nginx_conf_path

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
	ynh_replace_string "location $old_path" "location $new_path" "$nginx_conf_path"
	ynh_replace_string "SCRIPT_NAME $old_path" "SCRIPT_NAME $new_path" "$nginx_conf_path"
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
	finalnginxconf="/etc/nginx/conf.d/${new_domain}.d/${app}.conf"
	mv "$nginx_conf_path" "$finalnginxconf"
fi

#=================================================
# Edit specific content from nginx configuration
#=================================================

settings="$final_path/venv/lib/python2.7/site-packages/weblate/settings.py"

if [ "$old_path" == "/" ] && [ "$new_path" != "/" ]
then
	# uwsgi_param is only needed for non-root installation
	ynh_replace_string "#uwsgi_param "     "uwsgi_param "      "$finalnginxconf"
	ynh_replace_string "#uwsgi_modifier1 " "uwsgi_modifier1 " "$finalnginxconf"

	if [ "$is_public" -eq 0 ]
	then
		# ynh panel is only comptable with non-root installation
		# ynh panel is useless for public websites
		ynh_replace_string "	#include conf.d/"  "	include conf.d/"  "$finalnginxconf"
	fi
	# root install as an empty PATHURL to prevent '//static'
	ynh_replace_string "URL_PREFIX = ''" "URL_PREFIX = '$new_path'" "$settings"

	ynh_store_file_checksum "$finalnginxconf"
fi

if [ "$old_path" != "/" ] && [ "$new_path" == "/" ]
then
	# uwsgi_param is only needed for non-root installation
	ynh_replace_string "uwsgi_param "     "#uwsgi_param "      "$finalnginxconf"
	ynh_replace_string "uwsgi_modifier1 " "#uwsgi_modifier1 " "$finalnginxconf"

	# ynh panel is only comptable with non-root installation
	ynh_replace_string "	include conf.d/"  "	#include conf.d/"  "$finalnginxconf"

	# root install as an empty PATHURL to prevent '//static'
	ynh_replace_string "URL_PREFIX = '$old_path'" "URL_PREFIX = ''" "$settings"

	ynh_store_file_checksum "$finalnginxconf"
fi

#=================================================
# MODIFY settings.py
#=================================================

settingspy_conf_path="$final_path/venv/lib/python2.7/site-packages/weblate/settings.py"

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
	ynh_replace_string "URL_PREFIX = '$old_path" "URL_PREFIX = '$new_path" "$settingspy_conf_path"
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
	# replace SERVER_EMAIL
	ynh_replace_string "noreply@$old_domain" "noreply@$new_domain" "$settingspy_conf_path"
	# replace ALLOWED_HOSTS
	ynh_replace_string "['$old_domain']" "['$new_domain']" "$settingspy_conf_path"
fi

#=================================================
# ChangeSite inside weblate
#==========================================
(
	set +eu
	source "${final_path}/venv/bin/activate"
	export DJANGO_SETTINGS_MODULE="weblate.settings"
	weblate changesite --set-name "$new_domain"
)

#=================================================
# GENERIC FINALISATION
#=================================================
# RELOAD NGINX and Weblate
#=================================================
systemctl reload nginx
systemctl stop "$app.service"
systemctl start "$app.service"
